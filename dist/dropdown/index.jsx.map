{
  "version": 3,
  "sources": [
    "index.jsx"
  ],
  "names": [
    "DropdownWrapper",
    "props",
    "state",
    "value",
    "forceDirty",
    "validate",
    "setState",
    "onChange",
    "fieldClassName",
    "renderLabel",
    "_onChange",
    "inputIsValid",
    "renderError",
    "propTypes",
    "PropTypes",
    "string",
    "name",
    "isRequired",
    "func"
  ],
  "mappings": ";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;;;;;;IAQMA,e;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACXA,KADW;;AAEjB,UAAKC,KAAL,GAAa;AACXC,aAAO,MAAKF,KAAL,CAAWE,KAAX,IAAoB;AADhB,KAAb;AAFiB;AAKlB;;;;oDAEyC;AAAA,UAAdC,UAAc,QAAdA,UAAc;;AACxC,UAAI,KAAKH,KAAL,CAAWG,UAAX,IAAyBA,UAAzB,IAAuCA,UAA3C,EAAuD;AACrD,aAAKH,KAAL,CAAWI,QAAX,CAAoB,KAAKJ,KAAL,CAAWE,KAA/B;AACD;AACF;;;8BAESA,K,EAAO;AACf,WAAKF,KAAL,CAAWI,QAAX,CAAoBF,KAApB;AACA,WAAKG,QAAL,CAAc,EAAEH,YAAF,EAAd;AACA,WAAKF,KAAL,CAAWM,QAAX,CAAoBJ,KAApB;AACD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA,UAAK,WAAW,KAAKF,KAAL,CAAWO,cAA3B;AACG,aAAKC,WAAL,EADH;AAEE,uEACM,KAAKR,KADX;AAEE,oBAAU,kBAACE,KAAD;AAAA,mBAAW,OAAKO,SAAL,CAAeP,KAAf,CAAX;AAAA,WAFZ;AAGE,wBAAc;AAAA,mBAAM,OAAKQ,YAAL,EAAN;AAAA;AAHhB,WAFF;AAOG,aAAKC,WAAL;AAPH,OADF;AAWD;;;;;;AAGHZ,gBAAgBa,SAAhB,GAA4B;AAC1BL,kBAAgB,gBAAMM,SAAN,CAAgBC,MADN;AAE1BC,QAAM,gBAAMF,SAAN,CAAgBC,MAAhB,CAAuBE,UAFH;AAG1BV,YAAU,gBAAMO,SAAN,CAAgBI,IAHA;AAI1Bb,YAAU,gBAAMS,SAAN,CAAgBI;AAJA,CAA5B;;kBAOelB,e",
  "file": "index.jsx",
  "sourceRoot": "../../src/form/dropdown",
  "sourcesContent": [
    "import React from 'react';\nimport InputBaseComponent from '../inputBaseComponent';\nimport Dropdown from './dropdown';\n\n/**\n * DropdownWrapper - params:\n * options: Array of { value: string, text: string }\n * value: value of selected option (string)\n * defaultOptionVisible: if true it will render a default option as the first option of the dropdown.\n * defaultOptionText: text of default option\n * onChange: function to be called when the user selects a new option of the dropdown.\n*/\nclass DropdownWrapper extends InputBaseComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value || ''\n    };\n  }\n\n  componentWillReceiveProps({ forceDirty }) {\n    if (this.props.forceDirty != forceDirty && forceDirty) {\n      this.props.validate(this.props.value);\n    }\n  }\n\n  _onChange(value) {\n    this.props.validate(value);\n    this.setState({ value });\n    this.props.onChange(value);\n  }\n\n  render() {\n    return (\n      <div className={this.props.fieldClassName}>\n        {this.renderLabel()}\n        <Dropdown\n          {...this.props}\n          onChange={(value) => this._onChange(value)}\n          inputIsValid={() => this.inputIsValid()}\n        />\n        {this.renderError()}\n      </div>\n    );\n  }\n}\n\nDropdownWrapper.propTypes = {\n  fieldClassName: React.PropTypes.string,\n  name: React.PropTypes.string.isRequired,\n  onChange: React.PropTypes.func,\n  validate: React.PropTypes.func\n};\n\nexport default DropdownWrapper;\n"
  ]
}
