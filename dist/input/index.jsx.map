{
  "version": 3,
  "sources": [
    "index.jsx"
  ],
  "names": [
    "Input",
    "props",
    "value",
    "onChange",
    "validate",
    "validateInput",
    "setState",
    "valid",
    "dirty",
    "errorMessage",
    "fieldClassName",
    "wrapperField",
    "type",
    "placeHolder",
    "name",
    "className",
    "input",
    "invalidClassName",
    "invalidField",
    "startValidatingWhenIsPristine",
    "renderLabel",
    "inputIsValid",
    "evt",
    "changeValue",
    "target",
    "isPristine",
    "renderError",
    "propTypes",
    "PropTypes",
    "string",
    "isRequired",
    "label",
    "func",
    "bool"
  ],
  "mappings": ";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,K;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,yGACXA,KADW;AAElB;;;;gCAEWC,K,EAAO;AACjB,WAAKD,KAAL,CAAWE,QAAX,CAAoBD,KAApB;AACD;;;6BAEQA,K,EAAO;AAAA,4BACoB,KAAKD,KADzB,CACNG,QADM;AAAA,UACNA,QADM,mCACK;AAAA,eAAM,IAAN;AAAA,OADL;;AAEd,UAAMC,gBAAgBD,SAASF,KAAT,CAAtB;AACA,WAAKI,QAAL,CAAc;AACZC,eAAOF,cAAcE,KADT;AAEZC,eAAO,IAFK;AAGZC,sBAAcJ,cAAcI;AAHhB,OAAd;AAKD;;;6BAEQ;AAAA;;AAAA,mBAUH,KAAKR,KAVF;AAAA,yCAELS,cAFK;AAAA,UAELA,cAFK,yCAEY,iBAAOC,YAFnB;AAAA,+BAGLC,IAHK;AAAA,UAGLA,IAHK,+BAGE,MAHF;AAAA,sCAILC,WAJK;AAAA,UAILA,WAJK,sCAIS,EAJT;AAAA,UAKLC,IALK,UAKLA,IALK;AAAA,oCAMLC,SANK;AAAA,UAMLA,SANK,oCAMO,iBAAOC,KANd;AAAA,yCAOLC,gBAPK;AAAA,UAOLA,gBAPK,yCAOc,iBAAOC,YAPrB;AAAA,UAQLhB,KARK,UAQLA,KARK;AAAA,yCASLiB,6BATK;AAAA,UASLA,6BATK,yCAS2B,KAT3B;;AAWP,aACE;AAAA;AAAA,UAAK,WAAWT,cAAhB;AACG,aAAKU,WAAL,EADH;AAEE;AACE,gBAAMR,IADR;AAEE,gBAAME,IAFR;AAGE,iBAAOZ,KAHT;AAIE,wBAAa,KAJf;AAKE,uBAAaW,WALf;AAME,qBACE,0BACE,CAAC,KAAKQ,YAAL,EAAD,GAAuBJ,gBAAvB,GAA0C,EAD5C,EAEEF,SAFF,CAPJ;AAYE,eAAKD,IAZP;AAaE,oBAAU,kBAACQ,GAAD,EAAS;AACjB,mBAAKC,WAAL,CAAiBD,IAAIE,MAAJ,CAAWtB,KAA5B;AACA,gBAAIiB,6BAAJ,EAAmC;AACjC,qBAAKf,QAAL,CAAckB,IAAIE,MAAJ,CAAWtB,KAAzB;AACD,aAFD,MAEO;AACL,kBAAI,CAAC,OAAKuB,UAAL,EAAL,EAAwB;AACtB,uBAAKrB,QAAL,CAAckB,IAAIE,MAAJ,CAAWtB,KAAzB;AACD;AACF;AACF,WAtBH;AAuBE,kBAAQ,gBAACoB,GAAD,EAAS;AACf,mBAAKC,WAAL,CAAiBD,IAAIE,MAAJ,CAAWtB,KAA5B;AACA,mBAAKE,QAAL,CAAckB,IAAIE,MAAJ,CAAWtB,KAAzB;AACD;AA1BH,UAFF;AA8BG,aAAKwB,WAAL;AA9BH,OADF;AAkCD;;;;;;AAGH1B,MAAM2B,SAAN,GAAkB;AAChBjB,kBAAgB,gBAAMkB,SAAN,CAAgBC,MADhB;AAEhBjB,QAAM,gBAAMgB,SAAN,CAAgBC,MAAhB,CAAuBC,UAFb;AAGhBjB,eAAa,gBAAMe,SAAN,CAAgBC,MAHb;AAIhBE,SAAO,gBAAMH,SAAN,CAAgBC,MAJP;AAKhBf,QAAM,gBAAMc,SAAN,CAAgBC,MAAhB,CAAuBC,UALb;AAMhB5B,SAAO,gBAAM0B,SAAN,CAAgBC,MANP;AAOhBd,aAAW,gBAAMa,SAAN,CAAgBC,MAPX;AAQhBZ,oBAAkB,gBAAMW,SAAN,CAAgBC,MARlB;AAShBzB,YAAU,gBAAMwB,SAAN,CAAgBI,IATV;AAUhB7B,YAAU,gBAAMyB,SAAN,CAAgBI,IAVV;AAWhBb,iCAA+B,gBAAMS,SAAN,CAAgBK;AAX/B,CAAlB;;kBAcejC,K",
  "file": "index.jsx",
  "sourceRoot": "../../src/form/input",
  "sourcesContent": [
    "import React from 'react';\nimport InputBaseComponent from '../inputBaseComponent';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nclass Input extends InputBaseComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  changeValue(value) {\n    this.props.onChange(value);\n  }\n\n  validate(value) {\n    const { validate = () => true } = this.props;\n    const validateInput = validate(value);\n    this.setState({\n      valid: validateInput.valid,\n      dirty: true,\n      errorMessage: validateInput.errorMessage\n    });\n  }\n\n  render() {\n    const {\n      fieldClassName = styles.wrapperField,\n      type = 'text',\n      placeHolder = '',\n      name,\n      className = styles.input,\n      invalidClassName = styles.invalidField,\n      value,\n      startValidatingWhenIsPristine = false\n    } = this.props;\n    return (\n      <div className={fieldClassName}>\n        {this.renderLabel()}\n        <input\n          type={type}\n          name={name}\n          value={value}\n          autoComplete='off'\n          placeholder={placeHolder}\n          className={\n            classnames(\n              !this.inputIsValid() ? invalidClassName : '',\n              className\n            )\n          }\n          ref={name}\n          onChange={(evt) => {\n            this.changeValue(evt.target.value);\n            if (startValidatingWhenIsPristine) {\n              this.validate(evt.target.value);\n            } else {\n              if (!this.isPristine()) {\n                this.validate(evt.target.value);\n              }\n            }\n          }}\n          onBlur={(evt) => {\n            this.changeValue(evt.target.value);\n            this.validate(evt.target.value);\n          }}\n        />\n        {this.renderError()}\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  fieldClassName: React.PropTypes.string,\n  type: React.PropTypes.string.isRequired,\n  placeHolder: React.PropTypes.string,\n  label: React.PropTypes.string,\n  name: React.PropTypes.string.isRequired,\n  value: React.PropTypes.string,\n  className: React.PropTypes.string,\n  invalidClassName: React.PropTypes.string,\n  validate: React.PropTypes.func,\n  onChange: React.PropTypes.func,\n  startValidatingWhenIsPristine: React.PropTypes.bool\n};\n\nexport default Input;\n"
  ]
}
