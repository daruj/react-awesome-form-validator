{
  "version": 3,
  "sources": [
    "index.jsx"
  ],
  "names": [
    "Input",
    "props",
    "fieldClassName",
    "wrapperField",
    "type",
    "placeHolder",
    "name",
    "className",
    "input",
    "invalidClassName",
    "invalidField",
    "value",
    "startValidatingWhenIsPristine",
    "disabled",
    "renderLabel",
    "inputIsValid",
    "evt",
    "target",
    "onChange",
    "validate",
    "isPristine",
    "renderError",
    "propTypes",
    "PropTypes",
    "string",
    "isRequired",
    "label",
    "func",
    "bool"
  ],
  "mappings": ";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,K;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,yGACXA,KADW;AAElB;;;;6BAEQ;AAAA;;AAAA,mBAWH,KAAKA,KAXF;AAAA,yCAELC,cAFK;AAAA,UAELA,cAFK,yCAEY,iBAAOC,YAFnB;AAAA,+BAGLC,IAHK;AAAA,UAGLA,IAHK,+BAGE,MAHF;AAAA,sCAILC,WAJK;AAAA,UAILA,WAJK,sCAIS,EAJT;AAAA,UAKLC,IALK,UAKLA,IALK;AAAA,oCAMLC,SANK;AAAA,UAMLA,SANK,oCAMO,iBAAOC,KANd;AAAA,yCAOLC,gBAPK;AAAA,UAOLA,gBAPK,yCAOc,iBAAOC,YAPrB;AAAA,UAQLC,KARK,UAQLA,KARK;AAAA,yCASLC,6BATK;AAAA,UASLA,6BATK,yCAS2B,KAT3B;AAAA,UAULC,QAVK,UAULA,QAVK;;AAYP,aACE;AAAA;AAAA,UAAK,WAAWX,cAAhB;AACG,aAAKY,WAAL,EADH;AAEE;AACE,gBAAMV,IADR;AAEE,gBAAME,IAFR;AAGE,iBAAOK,KAHT;AAIE,wBAAa,KAJf;AAKE,uBAAaN,WALf;AAME,oBAAUQ,QANZ;AAOE,qBACE,0BACE,CAAC,KAAKE,YAAL,EAAD,GAAuBN,gBAAvB,GAA0C,EAD5C,EAEEF,SAFF,CARJ;AAaE,eAAKD,IAbP;AAcE,oBAAU,kBAACU,GAAD,EAAS;AACjB,gBAAML,QAAQK,IAAIC,MAAJ,CAAWN,KAAzB;AACA,mBAAKV,KAAL,CAAWiB,QAAX,CAAoBP,KAApB;AACA,gBAAIC,6BAAJ,EAAmC;AACjC,qBAAKX,KAAL,CAAWkB,QAAX,CAAoBR,KAApB;AACD,aAFD,MAEO;AACL,kBAAI,CAAC,OAAKS,UAAL,EAAL,EAAwB;AACtB,uBAAKnB,KAAL,CAAWkB,QAAX,CAAoBR,KAApB;AACD;AACF;AACF,WAxBH;AAyBE,kBAAQ,gBAACK,GAAD,EAAS;AACf,gBAAML,QAAQK,IAAIC,MAAJ,CAAWN,KAAzB;AACA,mBAAKV,KAAL,CAAWiB,QAAX,CAAoBP,KAApB;AACA,mBAAKV,KAAL,CAAWkB,QAAX,CAAoBR,KAApB;AACD;AA7BH,UAFF;AAiCG,aAAKU,WAAL;AAjCH,OADF;AAqCD;;;;;;AAGHrB,MAAMsB,SAAN,GAAkB;AAChBpB,kBAAgB,gBAAMqB,SAAN,CAAgBC,MADhB;AAEhBpB,QAAM,gBAAMmB,SAAN,CAAgBC,MAAhB,CAAuBC,UAFb;AAGhBpB,eAAa,gBAAMkB,SAAN,CAAgBC,MAHb;AAIhBE,SAAO,gBAAMH,SAAN,CAAgBC,MAJP;AAKhBlB,QAAM,gBAAMiB,SAAN,CAAgBC,MAAhB,CAAuBC,UALb;AAMhBd,SAAO,gBAAMY,SAAN,CAAgBC,MANP;AAOhBjB,aAAW,gBAAMgB,SAAN,CAAgBC,MAPX;AAQhBf,oBAAkB,gBAAMc,SAAN,CAAgBC,MARlB;AAShBL,YAAU,gBAAMI,SAAN,CAAgBI,IATV;AAUhBT,YAAU,gBAAMK,SAAN,CAAgBI,IAVV;AAWhBf,iCAA+B,gBAAMW,SAAN,CAAgBK,IAX/B;AAYhBf,YAAU,gBAAMU,SAAN,CAAgBK;AAZV,CAAlB;;kBAee5B,K",
  "file": "index.jsx",
  "sourceRoot": "../../src/form/input",
  "sourcesContent": [
    "import React from 'react';\nimport InputBaseComponent from '../inputBaseComponent';\nimport classnames from 'classnames';\nimport styles from './styles.scss';\n\nclass Input extends InputBaseComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      fieldClassName = styles.wrapperField,\n      type = 'text',\n      placeHolder = '',\n      name,\n      className = styles.input,\n      invalidClassName = styles.invalidField,\n      value,\n      startValidatingWhenIsPristine = false,\n      disabled\n    } = this.props;\n    return (\n      <div className={fieldClassName}>\n        {this.renderLabel()}\n        <input\n          type={type}\n          name={name}\n          value={value}\n          autoComplete='off'\n          placeholder={placeHolder}\n          disabled={disabled}\n          className={\n            classnames(\n              !this.inputIsValid() ? invalidClassName : '',\n              className\n            )\n          }\n          ref={name}\n          onChange={(evt) => {\n            const value = evt.target.value;\n            this.props.onChange(value);\n            if (startValidatingWhenIsPristine) {\n              this.props.validate(value);\n            } else {\n              if (!this.isPristine()) {\n                this.props.validate(value);\n              }\n            }\n          }}\n          onBlur={(evt) => {\n            const value = evt.target.value;\n            this.props.onChange(value);\n            this.props.validate(value);\n          }}\n        />\n        {this.renderError()}\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  fieldClassName: React.PropTypes.string,\n  type: React.PropTypes.string.isRequired,\n  placeHolder: React.PropTypes.string,\n  label: React.PropTypes.string,\n  name: React.PropTypes.string.isRequired,\n  value: React.PropTypes.string,\n  className: React.PropTypes.string,\n  invalidClassName: React.PropTypes.string,\n  validate: React.PropTypes.func,\n  onChange: React.PropTypes.func,\n  startValidatingWhenIsPristine: React.PropTypes.bool,\n  disabled: React.PropTypes.bool\n};\n\nexport default Input;\n"
  ]
}
