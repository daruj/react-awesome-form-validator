{
  "version": 3,
  "sources": [
    "inputBaseComponent.jsx"
  ],
  "names": [
    "InputBaseComponent",
    "props",
    "forceDirty",
    "value",
    "refs",
    "name",
    "validate",
    "valid",
    "isPristine",
    "dirty",
    "label",
    "errorMessage",
    "propTypes",
    "PropTypes",
    "bool",
    "isRequired",
    "string",
    "func"
  ],
  "mappings": ";;;;;;;;AAAA;;;;;;;;;;;;IAEMA,kB;;;AACJ,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA,mIACXA,KADW;AAElB;;;;oDAEyC;AAAA,UAAdC,UAAc,QAAdA,UAAc;;AACxC,UAAI,KAAKD,KAAL,CAAWC,UAAX,IAAyBA,UAAzB,IAAuCA,UAA3C,EAAuD;AACrD,YAAMC,QAAQ,KAAKC,IAAL,CAAU,KAAKH,KAAL,CAAWI,IAArB,EAA2BF,KAAzC;AACA,aAAKF,KAAL,CAAWK,QAAX,CAAoBH,KAApB;AACD;AACF;;;mCAGc;AACb,aAAO,KAAKF,KAAL,CAAWM,KAAX,IAAoB,KAAKC,UAAL,EAA3B;AACD;;;8BAES;AACR,aAAO,KAAKP,KAAL,CAAWQ,KAAlB;AACD;;;iCAEY;AACX,aAAO,CAAC,KAAKR,KAAL,CAAWQ,KAAnB;AACD;;;kCAEa;AACZ,UAAI,KAAKR,KAAL,CAAWS,KAAf,EAAsB;AACpB,eAAQ;AAAA;AAAA;AAAQ,eAAKT,KAAL,CAAWS;AAAnB,SAAR;AACD;AACF;;;kCAEa;AACZ,UAAI,KAAKT,KAAL,CAAWU,YAAX,IAA2B,CAAC,KAAKH,UAAL,EAA5B,IAAiD,CAAC,KAAKP,KAAL,CAAWM,KAAjE,EAAwE;AACtE,eAAQ;AAAA;AAAA;AAAG;AAAA;AAAA;AAAO,iBAAKN,KAAL,CAAWU;AAAlB;AAAH,SAAR;AACD;AACF;;;;;;AAIHX,mBAAmBY,SAAnB,GAA+B;AAC7BV,cAAY,gBAAMW,SAAN,CAAgBC,IAAhB,CAAqBC,UADJ;AAE7BV,QAAM,gBAAMQ,SAAN,CAAgBG,MAAhB,CAAuBD,UAFA;AAG7BT,YAAU,gBAAMO,SAAN,CAAgBI,IAHG;AAI7BP,SAAO,gBAAMG,SAAN,CAAgBG,MAJM;AAK7BT,SAAO,gBAAMM,SAAN,CAAgBC,IALM;AAM7BL,SAAO,gBAAMI,SAAN,CAAgBC,IANM;AAO7BH,gBAAc,gBAAME,SAAN,CAAgBG;AAPD,CAA/B;;kBAUehB,kB",
  "file": "inputBaseComponent.jsx",
  "sourceRoot": "../src/form",
  "sourcesContent": [
    "import React, { Component } from 'react';\n\nclass InputBaseComponent extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillReceiveProps({ forceDirty }) {\n    if (this.props.forceDirty != forceDirty && forceDirty) {\n      const value = this.refs[this.props.name].value;\n      this.props.validate(value);\n    }\n  }\n\n\n  inputIsValid() {\n    return this.props.valid || this.isPristine();\n  }\n\n  isDirty() {\n    return this.props.dirty;\n  }\n\n  isPristine() {\n    return !this.props.dirty;\n  }\n\n  renderLabel() {\n    if (this.props.label) {\n      return (<label>{this.props.label}</label>);\n    }\n  }\n\n  renderError() {\n    if (this.props.errorMessage && !this.isPristine() && !this.props.valid) {\n      return (<p><span>{this.props.errorMessage}</span></p>);\n    }\n  }\n\n}\n\nInputBaseComponent.propTypes = {\n  forceDirty: React.PropTypes.bool.isRequired,\n  name: React.PropTypes.string.isRequired,\n  validate: React.PropTypes.func,\n  label: React.PropTypes.string,\n  valid: React.PropTypes.bool,\n  dirty: React.PropTypes.bool,\n  errorMessage: React.PropTypes.string\n};\n\nexport default InputBaseComponent;\n"
  ]
}
